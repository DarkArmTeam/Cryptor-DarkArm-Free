#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
import subprocess
import time
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.core.file_analyzer import FileAnalyzer

def debug_telegram_issue():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å Telegram"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° TELEGRAM")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    original_file = "test_msgbox.exe"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π GUI —Ñ–∞–π–ª
    encrypted_file = "test_msgbox_crypted.exe"
    
    if not os.path.exists(original_file):
        print(f"‚ùå –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {original_file}")
        return
    
    print(f"üìÅ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª: {original_file}")
    print(f"üìè –†–∞–∑–º–µ—Ä: {os.path.getsize(original_file):,} –±–∞–π—Ç")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    analyzer = FileAnalyzer()
    result = analyzer.analyze_file(original_file)
    
    if "error" in result:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result['error']}")
        return
    
    print(f"üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {result.get('architecture', 'N/A')}")
    print(f"üéØ –ü–æ–¥—Å–∏—Å—Ç–µ–º–∞: {result.get('pe_info', {}).get('subsystem', 'N/A')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    if os.path.exists(encrypted_file):
        print(f"\nüìÅ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: {encrypted_file}")
        print(f"üìè –†–∞–∑–º–µ—Ä: {os.path.getsize(encrypted_file):,} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        print(f"\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:")
        print("1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π TelegramBuild.exe")
        print("2. –ï—Å–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–∞–º–æ–º —Ñ–∞–π–ª–µ")
        print("3. –ï—Å–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –ª–æ–∞–¥–µ—Ä–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        print(f"\nüì¶ –ó–ê–í–ò–°–ò–ú–û–°–¢–ò:")
        deps = result.get('dependencies', [])
        for dep in deps[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            if 'error' not in dep:
                print(f"   ‚Ä¢ {dep.get('dll_name', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏–∏
        print(f"\nüìÑ –°–ï–ö–¶–ò–ò:")
        sections = result.get('sections', [])
        for section in sections[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            if 'error' not in section:
                print(f"   ‚Ä¢ {section.get('name', 'N/A')} - {section.get('virtual_size', 0):,} –±–∞–π—Ç")
        
        print(f"\nüéØ –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
        print("1. Telegram —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("2. –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–º—è—Ç–∏")
        print("3. –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª")
        print("4. Telegram —Ç—Ä–µ–±—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("5. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–µ–ª–æ–∫–∞—Ü–∏—è–º–∏ –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏")
        
        print(f"\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π TelegramBuild.exe")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –æ–Ω")
        print("3. –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –ª–æ–∞–¥–µ—Ä–µ")
        print("4. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–∞–º–æ–º —Ñ–∞–π–ª–µ")
        print("5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π GUI —Ñ–∞–π–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, notepad.exe)")
        
    else:
        print(f"‚ùå –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {encrypted_file}")

if __name__ == "__main__":
    debug_telegram_issue() 